{"version":3,"sources":["helpers/actionsHelper.js","services/searchService.js","services/historyService.js","redux/search/searchActionTypes.js","redux/ui/uiActionTypes.js","redux/search/searchActions.js","components/history/HistoryItem.js","components/history/History.js","components/search/SearchItem.js","components/search/SearchResults.js","components/search/Search.js","components/search/SearchAndResults.js","containers/SearchContainer.js","containers/App.js","serviceWorker.js","redux/search/searchReducers.js","redux/ui/uiReducers.js","redux/reducers.js","redux/store.js","index.js"],"names":["createAction","type","payload","data","SearchService","query","axios","get","params","q","post","HistoryService","actionTypes","loadSearchHistory","dispatch","uiTypes","getHistoryList","then","response","ok","Array","isArray","history","length","searchTypes","catch","error","searchData","array","setSearchQuery","HistoryItem","props","Typography","color","Button","onClick","handleOnClick","History","renderHistoryList","map","h","key","Math","random","handleQuerySearch","this","loading","CircularProgress","Component","SearchItem","align","href","url","title","useStyles","makeStyles","theme","contentWrapper","margin","SearchResults","classes","className","results","r","renderSearchResults","searchInput","fontSize","typography","block","display","search","marginRight","spacing","Search","Grid","container","item","xs","TextField","onKeyPress","handleOnKeyPress","onChange","handleOnChange","fullWidth","placeholder","InputProps","disableUnderline","value","variant","handleOnSubmit","paper","marginTop","maxWidth","overflow","searchBar","borderBottom","SearchAndResults","Paper","position","elevation","Toolbar","SearchContainer","event","searchActions","target","preventDefault","searchQuery","result","ui","searchLoading","connect","state","UI","bindActionCreators","App","justify","sm","sidebarLoading","Boolean","window","location","hostname","match","defaultState","action","newHistory","splice","push","appReducers","combineReducers","reducers","middlewares","thunk","logger","store","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f5707d1.chunk.js","sourcesContent":["const createAction = (type, payload) => {\r\n  return {\r\n    type: type,\r\n    data: payload\r\n  }\r\n}\r\n\r\nexport {\r\n  createAction\r\n}","import axios from 'axios'\r\n\r\nconst SEARCH_DATA_URL = '/api/search'\r\n\r\nclass SearchService{\r\n  static searchData(query){\r\n    return axios.get(SEARCH_DATA_URL, {params: {q: query}})\r\n  }\r\n\r\n  static searchDataPOST(query){\r\n    return axios.post(SEARCH_DATA_URL, {params: query})\r\n  }\r\n}\r\n\r\nexport default SearchService","import axios from 'axios'\r\n\r\nconst HISTORY_URL = '/api/history'\r\n\r\nclass HistoryService{\r\n  static getHistoryList(){\r\n    return axios.get(HISTORY_URL)\r\n  }\r\n}\r\n\r\nexport default HistoryService","export const actionTypes = {\r\n  SEARCH_DATA_RESPONSE: 'SEARCH_DATA_RESPONSE',\r\n  PRESERVE_SEARCH_HISTORY: 'PRESERVE_SEARCH_HISTORY',\r\n  SET_SEARCH_HISTORY: 'SET_SEARCH_HISTORY',\r\n  SET_SEARCH_QUERY: 'SET_SEARCH_QUERY'\r\n}","export const actionTypes = {\r\n  SET_SEARCH_LOADING: 'SET_SEARCH_LOADING',\r\n  SET_SIDEBAR_LOADING: 'SET_SIDEBAR_LOADING'\r\n}\r\n\r\n","import {createAction} from '../../helpers/actionsHelper';\r\nimport SearchService from '../../services/searchService';\r\nimport HistoryService from '../../services/historyService';\r\n\r\nimport {actionTypes as searchTypes} from './searchActionTypes';\r\nimport {actionTypes as uiTypes} from '../ui/uiActionTypes';\r\n\r\nexport function loadSearchHistory() {\r\n  return dispatch => {\r\n    dispatch(createAction(uiTypes.SET_SIDEBAR_LOADING, true));\r\n\r\n    HistoryService.getHistoryList()\r\n        .then(response => {\r\n          const data = response.data\r\n\r\n          if(data.ok && Array.isArray(data.history) && data.history.length > 0){\r\n            dispatch(createAction(searchTypes.SET_SEARCH_HISTORY, data.history));\r\n          }\r\n\r\n\r\n          dispatch(createAction(uiTypes.SET_SIDEBAR_LOADING, false));\r\n        })\r\n        .catch(error => {\r\n          dispatch(createAction(uiTypes.SET_SIDEBAR_LOADING, false));\r\n        })\r\n  }\r\n}\r\n\r\nexport function searchData(query) {\r\n  return dispatch => {\r\n    dispatch(createAction(uiTypes.SET_SEARCH_LOADING, true));\r\n\r\n    dispatch(createAction(searchTypes.SET_SEARCH_QUERY, query))\r\n\r\n    return SearchService.searchData(query)\r\n        .then(response => {\r\n          const data = response.data;\r\n\r\n          if(data.ok){\r\n            dispatch(createAction(searchTypes.PRESERVE_SEARCH_HISTORY, query));\r\n            dispatch(createAction(searchTypes.SEARCH_DATA_RESPONSE, data.array));\r\n          }\r\n\r\n          dispatch(createAction(uiTypes.SET_SEARCH_LOADING, false));\r\n        })\r\n        .catch(error => {\r\n          dispatch(createAction(uiTypes.SET_SEARCH_LOADING, false));\r\n        });\r\n  }\r\n}\r\n\r\nexport function setSearchQuery(query) {\r\n  return createAction(searchTypes.SET_SEARCH_QUERY, query)\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst HistoryItem = function(props){\r\n  return(\r\n      <Typography color=\"textSecondary\">\r\n        <Button onClick={props.handleOnClick}>{props.query}</Button>\r\n      </Typography>\r\n  )\r\n}\r\n\r\nexport default HistoryItem","import React, {Component} from 'react';\r\nimport HistoryItem from './HistoryItem';\r\nimport {CircularProgress} from '@material-ui/core';\r\n\r\nclass History extends Component {\r\n\r\n  renderHistoryList = props => {\r\n    return (<div>\r\n      {\r\n        props.history && props.history.length === 0 ?\r\n            'Nothing' :\r\n            props.history.map(h => {\r\n              return (<HistoryItem key={`${h}${Math.random()}`} handleOnClick={() => props.handleQuerySearch(h)} query={h}/>);\r\n            })\r\n      }\r\n    </div>);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h4>Recently searched</h4>\r\n          {\r\n            this.props.loading ? <CircularProgress/> : this.renderHistoryList(this.props)\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst SearchItem = function(props) {\r\n\r\n  return (\r\n      <Typography color=\"textSecondary\" align=\"justify\">\r\n        <p><a href={props.url}>{props.title}</a></p>\r\n      </Typography>\r\n  );\r\n};\r\n\r\nexport default SearchItem;","import {CircularProgress, makeStyles} from '@material-ui/core';\r\nimport React from 'react';\r\nimport SearchItem from './SearchItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  contentWrapper: {\r\n    margin: '40px 16px',\r\n  },\r\n}));\r\n\r\nconst renderSearchResults = props => {\r\n  return (<div>\r\n    {\r\n      props.results && props.results.length === 0 ?\r\n          'No results' : props.results.map(r => (<SearchItem url={r.url} title={r.title}/>))\r\n    }\r\n  </div>);\r\n};\r\n\r\nconst SearchResults = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <div className={classes.contentWrapper}>\r\n        {\r\n          props.loading ? <CircularProgress/> : renderSearchResults(props)\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;","import Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/core/SvgIcon/SvgIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  search: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Search = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <SearchIcon className={classes.block} color=\"inherit\"/>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <TextField\r\n              onKeyPress={props.handleOnKeyPress}\r\n              onChange={props.handleOnChange}\r\n              fullWidth\r\n              placeholder=\"What you are searching for...\"\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                className: classes.searchInput,\r\n              }}\r\n              value={props.value}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.search}\r\n                  onClick={props.handleOnSubmit}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>);\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SearchResults from './SearchResults';\r\nimport Search from './Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: '25px',\r\n    maxWidth: 936,\r\n    margin: 'auto',\r\n    overflow: 'hidden',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  }\r\n}));\r\n\r\nconst SearchAndResults = function(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Paper className={classes.paper}>\r\n        <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n          <Toolbar>\r\n            <Search\r\n                value={props.value}\r\n                handleOnKeyPress={props.handleOnKeyPress}\r\n                handleOnSubmit={props.handleOnSubmit}\r\n                handleOnChange={props.handleOnChange}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <SearchResults\r\n            results={props.results}\r\n            loading={props.loading}/>\r\n      </Paper>);\r\n};\r\n\r\nexport default SearchAndResults;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport SearchAndResults from '../components/search/SearchAndResults';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as searchActions from '../redux/search/searchActions';\r\n\r\nclass SearchContainer extends Component{\r\n\r\n  handleOnChange = (event) => {\r\n    const {setSearchQuery} = this.props.searchActions\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.handleQuerySearch(this.props.search.searchQuery)\r\n  }\r\n\r\n  handleOnKeyPress = event =>{\r\n    if (event.key === 'Enter') {\r\n      this.props.handleQuerySearch(this.props.search.searchQuery)\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {searchQuery, result} = this.props.search;\r\n    return (\r\n        <SearchAndResults\r\n            loading={this.props.ui.searchLoading}\r\n            results={result}\r\n            value={searchQuery}\r\n            handleOnSubmit={this.handleOnSubmit}\r\n            handleOnChange={this.handleOnChange}\r\n            handleOnKeyPress={this.handleOnKeyPress}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search: state.Search,\r\n    ui: state.UI\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    searchActions: bindActionCreators(searchActions, dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport * as searchActions from '../redux/search/searchActions';\n\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport History from '../components/history/History';\nimport SearchContainer from './SearchContainer';\n\nclass App extends Component {\n\n  componentDidMount() {\n    if (this.props.search && this.props.search.history && this.props.search.history.length === 0) {\n      const {loadSearchHistory} = this.props.searchActions;\n      loadSearchHistory();\n    }\n  }\n\n  handleQuerySearch = (query) => {\n    const {searchData} = this.props.searchActions;\n    searchData(query);\n  };\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Grid container spacing={1} justify=\"center\">\n            <Grid item xs={12} sm={3}>\n              <History\n                  loading={this.props.ui.sidebarLoading}\n                  handleQuerySearch={this.handleQuerySearch}\n                  history={this.props.search.history}\n              />\n            </Grid>\n            <Grid item xs={11} sm={6} >\n              <SearchContainer handleQuerySearch={this.handleQuerySearch}/>\n            </Grid>\n          </Grid>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    search: state.Search,\n    ui: state.UI,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {actionTypes} from './searchActionTypes'\r\nlet defaultState = {\r\n  searchQuery: '',\r\n  result: [],\r\n  history : []\r\n}\r\n\r\nexport default function searchReducers(state = defaultState, action) {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SEARCH_DATA_RESPONSE: {\r\n\r\n      return {...state, result: action.data}\r\n    }\r\n    case actionTypes.PRESERVE_SEARCH_HISTORY: {\r\n      let newHistory = [...state.history]\r\n\r\n      if(newHistory.length > 9){\r\n        newHistory.splice(0,1)\r\n      }\r\n\r\n      newHistory.push(action.data)\r\n\r\n      return {...state, history: newHistory}\r\n    }\r\n    case actionTypes.SET_SEARCH_HISTORY: {\r\n\r\n      let newHistory = [...action.data]\r\n\r\n      if(newHistory.length > 10){\r\n        newHistory.splice(0,newHistory.length - 10)\r\n      }\r\n\r\n      return {...state, history: newHistory}\r\n    }\r\n    case actionTypes.SET_SEARCH_QUERY: {\r\n      return {...state, searchQuery: action.data}\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n\r\n  }\r\n}","import {actionTypes} from './uiActionTypes'\r\n\r\nlet defaultState = {\r\n  searchLoading: false,\r\n  sidebarLoading: false\r\n}\r\n\r\nexport default function uiReducers(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.SET_SEARCH_LOADING: {\r\n      return {...state, searchLoading: action.data}\r\n    }\r\n    case actionTypes.SET_SIDEBAR_LOADING: {\r\n      return {...state, sidebarLoading: action.data}\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n\r\n  }\r\n}","import searchReducers from './search/searchReducers'\r\nimport uiReducers from './ui/uiReducers'\r\n\r\nexport default {\r\n  Search: searchReducers,\r\n  UI: uiReducers\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport reducers from './reducers'\r\n\r\nconst appReducers = combineReducers({...reducers})\r\nconst middlewares = [thunk, logger]\r\n\r\nconst store = createStore(appReducers, compose(applyMiddleware(...middlewares)))\r\n\r\nexport { store }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}